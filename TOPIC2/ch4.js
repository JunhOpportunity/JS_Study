// 자바스크립트의 다양한 문법과 표현

//==============================================================//
// 삼항 연산자
// 삼항 연산자는 표현식이기때문에 조건에 따라 변수 선언 불가능.
const CUT_OFF = 80;
function passFail(score) {
    return score > CUT_OFF ? "PASS" : "Fail";
};

console.log(passFail(75));

//==============================================================//


//==============================================================//
// Spread 구문
// 배열을 이용해 Spread 구문 사용 시 쉽게 값을 복사하거나 가져올 수있음.
// ...배열이름
// 그러나, 배열 안에 하나의 값만 들어있다고 해서 하나를 가지고 하나의 값이라고 이해해서는 안됨
// ex) const num = [1];  const n = ...num;  <-  오류 발생
const arr = [1, 2, 3, 4];
const arrCopy = [...arr];

console.log(arr); // => [1, 2, 3, 4] 출력 됨.
console.log(arrCopy); // => [1, 2, 3, 4] 출력 됨.
//==============================================================//


//==============================================================//
// 모던한 프로퍼티 표기법
const title = 'title';
const birth = 2001;
const job = 'student';

const user = {
    // title: title, 프로퍼티 네임 = 변수 이름 => 축소 가능
    // birth: birth,
    // job: job,
    title,
    birth,
    job,
};

// +) '프로퍼티 네임'을 '개선된 프로퍼티 네임' 이라는 방식으로 사용 가능.
const test = {
    ["ABC" + 'abc']: 'abctest',
    [job]: 'job',
};
//==============================================================//


//==============================================================//
// 옵셔널 체이닝 뭔지 모르겠음. ch4-09


//==============================================================//
